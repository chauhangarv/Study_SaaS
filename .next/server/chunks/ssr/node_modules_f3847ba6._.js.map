{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chauh/OneDrive/Desktop/Coding/saas/node_modules/%40vapi-ai/web/dist/api.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable */\n/* tslint:disable */\n// @ts-nocheck\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Api = exports.HttpClient = exports.ContentType = void 0;\nvar ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"JsonApi\"] = \"application/vnd.api+json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n    ContentType[\"Text\"] = \"text/plain\";\n})(ContentType || (exports.ContentType = ContentType = {}));\nclass HttpClient {\n    baseUrl = \"https://api.vapi.ai\";\n    securityData = null;\n    securityWorker;\n    abortControllers = new Map();\n    customFetch = (...fetchParams) => fetch(...fetchParams);\n    baseApiParams = {\n        credentials: \"same-origin\",\n        headers: {},\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n    };\n    constructor(apiConfig = {}) {\n        Object.assign(this, apiConfig);\n    }\n    setSecurityData = (data) => {\n        this.securityData = data;\n    };\n    encodeQueryParam(key, value) {\n        const encodedKey = encodeURIComponent(key);\n        return `${encodedKey}=${encodeURIComponent(typeof value === \"number\" ? value : `${value}`)}`;\n    }\n    addQueryParam(query, key) {\n        return this.encodeQueryParam(key, query[key]);\n    }\n    addArrayQueryParam(query, key) {\n        const value = query[key];\n        return value.map((v) => this.encodeQueryParam(key, v)).join(\"&\");\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => Array.isArray(query[key])\n            ? this.addArrayQueryParam(query, key)\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    contentFormatters = {\n        [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\")\n            ? JSON.stringify(input)\n            : input,\n        [ContentType.JsonApi]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\")\n            ? JSON.stringify(input)\n            : input,\n        [ContentType.Text]: (input) => input !== null && typeof input !== \"string\"\n            ? JSON.stringify(input)\n            : input,\n        [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((formData, key) => {\n            const property = input[key];\n            formData.append(key, property instanceof Blob\n                ? property\n                : typeof property === \"object\" && property !== null\n                    ? JSON.stringify(property)\n                    : `${property}`);\n            return formData;\n        }, new FormData()),\n        [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n    };\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n    createAbortSignal = (cancelToken) => {\n        if (this.abortControllers.has(cancelToken)) {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                return abortController.signal;\n            }\n            return void 0;\n        }\n        const abortController = new AbortController();\n        this.abortControllers.set(cancelToken, abortController);\n        return abortController.signal;\n    };\n    abortRequest = (cancelToken) => {\n        const abortController = this.abortControllers.get(cancelToken);\n        if (abortController) {\n            abortController.abort();\n            this.abortControllers.delete(cancelToken);\n        }\n    };\n    request = async ({ body, secure, path, type, query, format, baseUrl, cancelToken, ...params }) => {\n        const secureParams = ((typeof secure === \"boolean\" ? secure : this.baseApiParams.secure) &&\n            this.securityWorker &&\n            (await this.securityWorker(this.securityData))) ||\n            {};\n        const requestParams = this.mergeRequestParams(params, secureParams);\n        const queryString = query && this.toQueryString(query);\n        const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n        const responseFormat = format || requestParams.format;\n        return this.customFetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n            ...requestParams,\n            headers: {\n                ...(requestParams.headers || {}),\n                ...(type && type !== ContentType.FormData\n                    ? { \"Content-Type\": type }\n                    : {}),\n            },\n            signal: (cancelToken\n                ? this.createAbortSignal(cancelToken)\n                : requestParams.signal) || null,\n            body: typeof body === \"undefined\" || body === null\n                ? null\n                : payloadFormatter(body),\n        }).then(async (response) => {\n            const r = response.clone();\n            r.data = null;\n            r.error = null;\n            const data = !responseFormat\n                ? r\n                : await response[responseFormat]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n            if (cancelToken) {\n                this.abortControllers.delete(cancelToken);\n            }\n            if (!response.ok)\n                throw data;\n            return data;\n        });\n    };\n}\nexports.HttpClient = HttpClient;\n/**\n * @title Vapi API\n * @version 1.0\n * @baseUrl https://api.vapi.ai\n * @contact\n *\n * Voice AI for developers.\n */\nclass Api extends HttpClient {\n    call = {\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerCreate\n         * @summary Create Call\n         * @request POST:/call\n         * @secure\n         */\n        callControllerCreate: (data, params = {}) => this.request({\n            path: `/call`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerFindAll\n         * @summary List Calls\n         * @request GET:/call\n         * @secure\n         */\n        callControllerFindAll: (query, params = {}) => this.request({\n            path: `/call`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerFindOne\n         * @summary Get Call\n         * @request GET:/call/{id}\n         * @secure\n         */\n        callControllerFindOne: (id, params = {}) => this.request({\n            path: `/call/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerUpdate\n         * @summary Update Call\n         * @request PATCH:/call/{id}\n         * @secure\n         */\n        callControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/call/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerDeleteCallData\n         * @summary Delete Call Data\n         * @request DELETE:/call/{id}\n         * @secure\n         */\n        callControllerDeleteCallData: (id, params = {}) => this.request({\n            path: `/call/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerCreatePhoneCall\n         * @summary Create Phone Call\n         * @request POST:/call/phone\n         * @deprecated\n         * @secure\n         */\n        callControllerCreatePhoneCall: (data, params = {}) => this.request({\n            path: `/call/phone`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerCreateWebCall\n         * @summary Create Web Call\n         * @request POST:/call/web\n         * @secure\n         */\n        callControllerCreateWebCall: (data, params = {}) => this.request({\n            path: `/call/web`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    v2 = {\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerExportCalls\n         * @summary Export Calls to CSV\n         * @request GET:/v2/call/export\n         * @secure\n         */\n        callControllerExportCalls: (query, params = {}) => this.request({\n            path: `/v2/call/export`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerFindAllPaginated\n         * @summary List Calls\n         * @request GET:/v2/call\n         * @secure\n         */\n        callControllerFindAllPaginated: (query, params = {}) => this.request({\n            path: `/v2/call`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Calls\n         * @name CallControllerFindAllMetadataPaginated\n         * @summary List Call Metadata\n         * @request GET:/v2/call/metadata\n         * @secure\n         */\n        callControllerFindAllMetadataPaginated: (query, params = {}) => this.request({\n            path: `/v2/call/metadata`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Assistants\n         * @name AssistantControllerFindAllPaginated\n         * @summary List Assistants with pagination\n         * @request GET:/v2/assistant\n         * @secure\n         */\n        assistantControllerFindAllPaginated: (query, params = {}) => this.request({\n            path: `/v2/assistant`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Phone Numbers\n         * @name PhoneNumberControllerFindAllPaginated\n         * @summary List Phone Numbers\n         * @request GET:/v2/phone-number\n         * @secure\n         */\n        phoneNumberControllerFindAllPaginated: (query, params = {}) => this.request({\n            path: `/v2/phone-number`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    chat = {\n        /**\n         * No description\n         *\n         * @tags Chats\n         * @name ChatControllerListChats\n         * @summary List Chats\n         * @request GET:/chat\n         * @secure\n         */\n        chatControllerListChats: (query, params = {}) => this.request({\n            path: `/chat`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Creates a new chat. Requires at least one of: assistantId/assistant, sessionId, or previousChatId. Note: sessionId and previousChatId are mutually exclusive.\n         *\n         * @tags Chats\n         * @name ChatControllerCreateChat\n         * @summary Create Chat\n         * @request POST:/chat\n         * @secure\n         */\n        chatControllerCreateChat: (data, params = {}) => this.request({\n            path: `/chat`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Chats\n         * @name ChatControllerGetChat\n         * @summary Get Chat\n         * @request GET:/chat/{id}\n         * @secure\n         */\n        chatControllerGetChat: (id, params = {}) => this.request({\n            path: `/chat/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Chats\n         * @name ChatControllerDeleteChat\n         * @summary Delete Chat\n         * @request DELETE:/chat/{id}\n         * @secure\n         */\n        chatControllerDeleteChat: (id, params = {}) => this.request({\n            path: `/chat/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Chats\n         * @name ChatControllerCreateOpenAiChat\n         * @summary Create Chat (OpenAI Compatible)\n         * @request POST:/chat/responses\n         * @secure\n         */\n        chatControllerCreateOpenAiChat: (data, params = {}) => this.request({\n            path: `/chat/responses`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Chats\n         * @name ChatControllerCreateWebChat\n         * @summary Create WebChat\n         * @request POST:/chat/web\n         * @secure\n         */\n        chatControllerCreateWebChat: (data, params = {}) => this.request({\n            path: `/chat/web`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Chats\n         * @name ChatControllerCreateOpenAiWebChat\n         * @summary Create WebChat (OpenAI Compatible)\n         * @request POST:/chat/web/responses\n         * @secure\n         */\n        chatControllerCreateOpenAiWebChat: (data, params = {}) => this.request({\n            path: `/chat/web/responses`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    campaign = {\n        /**\n         * No description\n         *\n         * @tags Campaigns\n         * @name CampaignControllerCreate\n         * @summary Create Campaign\n         * @request POST:/campaign\n         * @secure\n         */\n        campaignControllerCreate: (data, params = {}) => this.request({\n            path: `/campaign`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Campaigns\n         * @name CampaignControllerFindAll\n         * @summary List Campaigns\n         * @request GET:/campaign\n         * @secure\n         */\n        campaignControllerFindAll: (query, params = {}) => this.request({\n            path: `/campaign`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Campaigns\n         * @name CampaignControllerFindAllPaginated\n         * @summary List Campaigns with pagination\n         * @request GET:/campaign/paginated\n         * @secure\n         */\n        campaignControllerFindAllPaginated: (query, params = {}) => this.request({\n            path: `/campaign/paginated`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Campaigns\n         * @name CampaignControllerFindOne\n         * @summary Get Campaign\n         * @request GET:/campaign/{id}\n         * @secure\n         */\n        campaignControllerFindOne: (id, params = {}) => this.request({\n            path: `/campaign/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Campaigns\n         * @name CampaignControllerUpdate\n         * @summary Update Campaign\n         * @request PATCH:/campaign/{id}\n         * @secure\n         */\n        campaignControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/campaign/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Campaigns\n         * @name CampaignControllerRemove\n         * @summary Delete Campaign\n         * @request DELETE:/campaign/{id}\n         * @secure\n         */\n        campaignControllerRemove: (id, params = {}) => this.request({\n            path: `/campaign/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    session = {\n        /**\n         * No description\n         *\n         * @tags Sessions\n         * @name SessionControllerCreate\n         * @summary Create Session\n         * @request POST:/session\n         * @secure\n         */\n        sessionControllerCreate: (data, params = {}) => this.request({\n            path: `/session`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Sessions\n         * @name SessionControllerFindAllPaginated\n         * @summary List Sessions\n         * @request GET:/session\n         * @secure\n         */\n        sessionControllerFindAllPaginated: (query, params = {}) => this.request({\n            path: `/session`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Sessions\n         * @name SessionControllerFindOne\n         * @summary Get Session\n         * @request GET:/session/{id}\n         * @secure\n         */\n        sessionControllerFindOne: (id, params = {}) => this.request({\n            path: `/session/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Sessions\n         * @name SessionControllerUpdate\n         * @summary Update Session\n         * @request PATCH:/session/{id}\n         * @secure\n         */\n        sessionControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/session/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Sessions\n         * @name SessionControllerRemove\n         * @summary Delete Session\n         * @request DELETE:/session/{id}\n         * @secure\n         */\n        sessionControllerRemove: (id, params = {}) => this.request({\n            path: `/session/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    support = {\n        /**\n         * No description\n         *\n         * @tags Support\n         * @name SupportControllerCreateTicket\n         * @summary Create Support Ticket\n         * @request POST:/support/ticket\n         * @secure\n         */\n        supportControllerCreateTicket: (data, params = {}) => this.request({\n            path: `/support/ticket`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    assistant = {\n        /**\n         * No description\n         *\n         * @tags Assistants\n         * @name AssistantControllerCreate\n         * @summary Create Assistant\n         * @request POST:/assistant\n         * @secure\n         */\n        assistantControllerCreate: (data, params = {}) => this.request({\n            path: `/assistant`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Assistants\n         * @name AssistantControllerFindAll\n         * @summary List Assistants\n         * @request GET:/assistant\n         * @secure\n         */\n        assistantControllerFindAll: (query, params = {}) => this.request({\n            path: `/assistant`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Assistants\n         * @name AssistantControllerFindOne\n         * @summary Get Assistant\n         * @request GET:/assistant/{id}\n         * @secure\n         */\n        assistantControllerFindOne: (id, params = {}) => this.request({\n            path: `/assistant/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Assistants\n         * @name AssistantControllerUpdate\n         * @summary Update Assistant\n         * @request PATCH:/assistant/{id}\n         * @secure\n         */\n        assistantControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/assistant/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Assistants\n         * @name AssistantControllerReplace\n         * @summary Replace Assistant\n         * @request PUT:/assistant/{id}\n         * @secure\n         */\n        assistantControllerReplace: (id, data, params = {}) => this.request({\n            path: `/assistant/${id}`,\n            method: \"PUT\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Assistants\n         * @name AssistantControllerRemove\n         * @summary Delete Assistant\n         * @request DELETE:/assistant/{id}\n         * @secure\n         */\n        assistantControllerRemove: (id, params = {}) => this.request({\n            path: `/assistant/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Assistants\n         * @name AssistantControllerFindVersions\n         * @summary List Assistant Versions\n         * @request GET:/assistant/{id}/version\n         * @secure\n         */\n        assistantControllerFindVersions: (id, query, params = {}) => this.request({\n            path: `/assistant/${id}/version`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    phoneNumber = {\n        /**\n         * @description Use POST /phone-number instead.\n         *\n         * @tags Phone Numbers\n         * @name PhoneNumberControllerImportTwilio\n         * @summary Import Twilio Number\n         * @request POST:/phone-number/import/twilio\n         * @deprecated\n         * @secure\n         */\n        phoneNumberControllerImportTwilio: (data, params = {}) => this.request({\n            path: `/phone-number/import/twilio`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Use POST /phone-number instead.\n         *\n         * @tags Phone Numbers\n         * @name PhoneNumberControllerImportVonage\n         * @summary Import Vonage Number\n         * @request POST:/phone-number/import/vonage\n         * @deprecated\n         * @secure\n         */\n        phoneNumberControllerImportVonage: (data, params = {}) => this.request({\n            path: `/phone-number/import/vonage`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Phone Numbers\n         * @name PhoneNumberControllerCreate\n         * @summary Create Phone Number\n         * @request POST:/phone-number\n         * @secure\n         */\n        phoneNumberControllerCreate: (data, params = {}) => this.request({\n            path: `/phone-number`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Phone Numbers\n         * @name PhoneNumberControllerFindAll\n         * @summary List Phone Numbers\n         * @request GET:/phone-number\n         * @secure\n         */\n        phoneNumberControllerFindAll: (query, params = {}) => this.request({\n            path: `/phone-number`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Phone Numbers\n         * @name PhoneNumberControllerFindOne\n         * @summary Get Phone Number\n         * @request GET:/phone-number/{id}\n         * @secure\n         */\n        phoneNumberControllerFindOne: (id, params = {}) => this.request({\n            path: `/phone-number/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Phone Numbers\n         * @name PhoneNumberControllerUpdate\n         * @summary Update Phone Number\n         * @request PATCH:/phone-number/{id}\n         * @secure\n         */\n        phoneNumberControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/phone-number/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Phone Numbers\n         * @name PhoneNumberControllerRemove\n         * @summary Delete Phone Number\n         * @request DELETE:/phone-number/{id}\n         * @secure\n         */\n        phoneNumberControllerRemove: (id, params = {}) => this.request({\n            path: `/phone-number/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    tool = {\n        /**\n         * No description\n         *\n         * @tags Tools\n         * @name ToolControllerCreate\n         * @summary Create Tool\n         * @request POST:/tool\n         * @secure\n         */\n        toolControllerCreate: (data, params = {}) => this.request({\n            path: `/tool`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Tools\n         * @name ToolControllerFindAll\n         * @summary List Tools\n         * @request GET:/tool\n         * @secure\n         */\n        toolControllerFindAll: (query, params = {}) => this.request({\n            path: `/tool`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Tools\n         * @name ToolControllerFindOne\n         * @summary Get Tool\n         * @request GET:/tool/{id}\n         * @secure\n         */\n        toolControllerFindOne: (id, params = {}) => this.request({\n            path: `/tool/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Tools\n         * @name ToolControllerUpdate\n         * @summary Update Tool\n         * @request PATCH:/tool/{id}\n         * @secure\n         */\n        toolControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/tool/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Tools\n         * @name ToolControllerRemove\n         * @summary Delete Tool\n         * @request DELETE:/tool/{id}\n         * @secure\n         */\n        toolControllerRemove: (id, params = {}) => this.request({\n            path: `/tool/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    file = {\n        /**\n         * @description Use POST /file instead.\n         *\n         * @tags Files\n         * @name FileControllerCreateDeprecated\n         * @summary Upload File\n         * @request POST:/file/upload\n         * @deprecated\n         * @secure\n         */\n        fileControllerCreateDeprecated: (data, params = {}) => this.request({\n            path: `/file/upload`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.FormData,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Files\n         * @name FileControllerCreate\n         * @summary Upload File\n         * @request POST:/file\n         * @secure\n         */\n        fileControllerCreate: (data, params = {}) => this.request({\n            path: `/file`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.FormData,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Files\n         * @name FileControllerFindAll\n         * @summary List Files\n         * @request GET:/file\n         * @secure\n         */\n        fileControllerFindAll: (params = {}) => this.request({\n            path: `/file`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Files\n         * @name FileControllerFindOne\n         * @summary Get File\n         * @request GET:/file/{id}\n         * @secure\n         */\n        fileControllerFindOne: (id, params = {}) => this.request({\n            path: `/file/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Files\n         * @name FileControllerUpdate\n         * @summary Update File\n         * @request PATCH:/file/{id}\n         * @secure\n         */\n        fileControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/file/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Files\n         * @name FileControllerRemove\n         * @summary Delete File\n         * @request DELETE:/file/{id}\n         * @secure\n         */\n        fileControllerRemove: (id, params = {}) => this.request({\n            path: `/file/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    knowledgeBase = {\n        /**\n         * No description\n         *\n         * @tags Knowledge Base\n         * @name KnowledgeBaseControllerCreate\n         * @summary Create Knowledge Base\n         * @request POST:/knowledge-base\n         * @secure\n         */\n        knowledgeBaseControllerCreate: (data, params = {}) => this.request({\n            path: `/knowledge-base`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Knowledge Base\n         * @name KnowledgeBaseControllerFindAll\n         * @summary List Knowledge Bases\n         * @request GET:/knowledge-base\n         * @secure\n         */\n        knowledgeBaseControllerFindAll: (query, params = {}) => this.request({\n            path: `/knowledge-base`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Knowledge Base\n         * @name KnowledgeBaseControllerFindOne\n         * @summary Get Knowledge Base\n         * @request GET:/knowledge-base/{id}\n         * @secure\n         */\n        knowledgeBaseControllerFindOne: (id, params = {}) => this.request({\n            path: `/knowledge-base/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Knowledge Base\n         * @name KnowledgeBaseControllerUpdate\n         * @summary Update Knowledge Base\n         * @request PATCH:/knowledge-base/{id}\n         * @secure\n         */\n        knowledgeBaseControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/knowledge-base/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Knowledge Base\n         * @name KnowledgeBaseControllerRemove\n         * @summary Delete Knowledge Base\n         * @request DELETE:/knowledge-base/{id}\n         * @secure\n         */\n        knowledgeBaseControllerRemove: (id, params = {}) => this.request({\n            path: `/knowledge-base/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    workflow = {\n        /**\n         * No description\n         *\n         * @tags Workflow\n         * @name WorkflowControllerFindAll\n         * @summary Get Workflows\n         * @request GET:/workflow\n         * @secure\n         */\n        workflowControllerFindAll: (params = {}) => this.request({\n            path: `/workflow`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Workflow\n         * @name WorkflowControllerCreate\n         * @summary Create Workflow\n         * @request POST:/workflow\n         * @secure\n         */\n        workflowControllerCreate: (data, params = {}) => this.request({\n            path: `/workflow`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Workflow\n         * @name WorkflowControllerFindOne\n         * @summary Get Workflow\n         * @request GET:/workflow/{id}\n         * @secure\n         */\n        workflowControllerFindOne: (id, params = {}) => this.request({\n            path: `/workflow/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Workflow\n         * @name WorkflowControllerDelete\n         * @summary Delete Workflow\n         * @request DELETE:/workflow/{id}\n         * @secure\n         */\n        workflowControllerDelete: (id, params = {}) => this.request({\n            path: `/workflow/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Workflow\n         * @name WorkflowControllerUpdate\n         * @summary Update Workflow\n         * @request PATCH:/workflow/{id}\n         * @secure\n         */\n        workflowControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/workflow/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Workflow\n         * @name WorkflowControllerGenerateFromTranscripts\n         * @summary Generate Workflow JSON from Transcript Files\n         * @request POST:/workflow/generate\n         * @secure\n         */\n        workflowControllerGenerateFromTranscripts: (data, params = {}) => this.request({\n            path: `/workflow/generate`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    squad = {\n        /**\n         * No description\n         *\n         * @tags Squads\n         * @name SquadControllerCreate\n         * @summary Create Squad\n         * @request POST:/squad\n         * @secure\n         */\n        squadControllerCreate: (data, params = {}) => this.request({\n            path: `/squad`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Squads\n         * @name SquadControllerFindAll\n         * @summary List Squads\n         * @request GET:/squad\n         * @secure\n         */\n        squadControllerFindAll: (query, params = {}) => this.request({\n            path: `/squad`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Squads\n         * @name SquadControllerFindOne\n         * @summary Get Squad\n         * @request GET:/squad/{id}\n         * @secure\n         */\n        squadControllerFindOne: (id, params = {}) => this.request({\n            path: `/squad/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Squads\n         * @name SquadControllerUpdate\n         * @summary Update Squad\n         * @request PATCH:/squad/{id}\n         * @secure\n         */\n        squadControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/squad/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Squads\n         * @name SquadControllerRemove\n         * @summary Delete Squad\n         * @request DELETE:/squad/{id}\n         * @secure\n         */\n        squadControllerRemove: (id, params = {}) => this.request({\n            path: `/squad/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    testSuite = {\n        /**\n         * No description\n         *\n         * @tags Test Suites\n         * @name TestSuiteControllerFindAllPaginated\n         * @summary List Test Suites\n         * @request GET:/test-suite\n         * @secure\n         */\n        testSuiteControllerFindAllPaginated: (query, params = {}) => this.request({\n            path: `/test-suite`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suites\n         * @name TestSuiteControllerCreate\n         * @summary Create Test Suite\n         * @request POST:/test-suite\n         * @secure\n         */\n        testSuiteControllerCreate: (data, params = {}) => this.request({\n            path: `/test-suite`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suites\n         * @name TestSuiteControllerFindOne\n         * @summary Get Test Suite\n         * @request GET:/test-suite/{id}\n         * @secure\n         */\n        testSuiteControllerFindOne: (id, params = {}) => this.request({\n            path: `/test-suite/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suites\n         * @name TestSuiteControllerUpdate\n         * @summary Update Test Suite\n         * @request PATCH:/test-suite/{id}\n         * @secure\n         */\n        testSuiteControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/test-suite/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suites\n         * @name TestSuiteControllerRemove\n         * @summary Delete Test Suite\n         * @request DELETE:/test-suite/{id}\n         * @secure\n         */\n        testSuiteControllerRemove: (id, params = {}) => this.request({\n            path: `/test-suite/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Tests\n         * @name TestSuiteTestControllerFindAllPaginated\n         * @summary List Tests\n         * @request GET:/test-suite/{testSuiteId}/test\n         * @secure\n         */\n        testSuiteTestControllerFindAllPaginated: (testSuiteId, query, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/test`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Tests\n         * @name TestSuiteTestControllerCreate\n         * @summary Create Test\n         * @request POST:/test-suite/{testSuiteId}/test\n         * @secure\n         */\n        testSuiteTestControllerCreate: (testSuiteId, data, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/test`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Tests\n         * @name TestSuiteTestControllerFindOne\n         * @summary Get Test\n         * @request GET:/test-suite/{testSuiteId}/test/{id}\n         * @secure\n         */\n        testSuiteTestControllerFindOne: (testSuiteId, id, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/test/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Tests\n         * @name TestSuiteTestControllerUpdate\n         * @summary Update Test\n         * @request PATCH:/test-suite/{testSuiteId}/test/{id}\n         * @secure\n         */\n        testSuiteTestControllerUpdate: (testSuiteId, id, data, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/test/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Tests\n         * @name TestSuiteTestControllerRemove\n         * @summary Delete Test\n         * @request DELETE:/test-suite/{testSuiteId}/test/{id}\n         * @secure\n         */\n        testSuiteTestControllerRemove: (testSuiteId, id, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/test/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Runs\n         * @name TestSuiteRunControllerFindAllPaginated\n         * @summary List Test Suite Runs\n         * @request GET:/test-suite/{testSuiteId}/run\n         * @secure\n         */\n        testSuiteRunControllerFindAllPaginated: (testSuiteId, query, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/run`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Runs\n         * @name TestSuiteRunControllerCreate\n         * @summary Create Test Suite Run\n         * @request POST:/test-suite/{testSuiteId}/run\n         * @secure\n         */\n        testSuiteRunControllerCreate: (testSuiteId, data, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/run`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Runs\n         * @name TestSuiteRunControllerFindOne\n         * @summary Get Test Suite Run\n         * @request GET:/test-suite/{testSuiteId}/run/{id}\n         * @secure\n         */\n        testSuiteRunControllerFindOne: (testSuiteId, id, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/run/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Runs\n         * @name TestSuiteRunControllerUpdate\n         * @summary Update Test Suite Run\n         * @request PATCH:/test-suite/{testSuiteId}/run/{id}\n         * @secure\n         */\n        testSuiteRunControllerUpdate: (testSuiteId, id, data, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/run/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Test Suite Runs\n         * @name TestSuiteRunControllerRemove\n         * @summary Delete Test Suite Run\n         * @request DELETE:/test-suite/{testSuiteId}/run/{id}\n         * @secure\n         */\n        testSuiteRunControllerRemove: (testSuiteId, id, params = {}) => this.request({\n            path: `/test-suite/${testSuiteId}/run/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    analytics = {\n        /**\n         * No description\n         *\n         * @tags Analytics\n         * @name AnalyticsControllerQuery\n         * @summary Create Analytics Queries\n         * @request POST:/analytics\n         * @secure\n         */\n        analyticsControllerQuery: (data, params = {}) => this.request({\n            path: `/analytics`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    log = {\n        /**\n         * No description\n         *\n         * @tags Logs\n         * @name LoggingControllerCallLogsQuery\n         * @summary Get Call Logs\n         * @request GET:/log\n         * @secure\n         */\n        loggingControllerCallLogsQuery: (query, params = {}) => this.request({\n            path: `/log`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Logs\n         * @name LoggingControllerCallLogsDeleteQuery\n         * @summary Delete Call Logs\n         * @request DELETE:/log\n         * @secure\n         */\n        loggingControllerCallLogsDeleteQuery: (query, params = {}) => this.request({\n            path: `/log`,\n            method: \"DELETE\",\n            query: query,\n            secure: true,\n            ...params,\n        }),\n    };\n    logs = {\n        /**\n         * No description\n         *\n         * @tags Logs\n         * @name LoggingControllerLogsQuery\n         * @summary Get Logs\n         * @request GET:/logs\n         * @deprecated\n         * @secure\n         */\n        loggingControllerLogsQuery: (query, params = {}) => this.request({\n            path: `/logs`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Logs\n         * @name LoggingControllerLogsDeleteQuery\n         * @summary Delete Logs\n         * @request DELETE:/logs\n         * @deprecated\n         * @secure\n         */\n        loggingControllerLogsDeleteQuery: (query, params = {}) => this.request({\n            path: `/logs`,\n            method: \"DELETE\",\n            query: query,\n            secure: true,\n            ...params,\n        }),\n    };\n    org = {\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerCreate\n         * @summary Create Org\n         * @request POST:/org\n         * @secure\n         */\n        orgControllerCreate: (data, params = {}) => this.request({\n            path: `/org`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerFindAll\n         * @summary List Orgs\n         * @request GET:/org\n         * @secure\n         */\n        orgControllerFindAll: (params = {}) => this.request({\n            path: `/org`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerFindOne\n         * @summary Get Org\n         * @request GET:/org/{id}\n         * @secure\n         */\n        orgControllerFindOne: (id, params = {}) => this.request({\n            path: `/org/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerUpdate\n         * @summary Update Org\n         * @request PATCH:/org/{id}\n         * @secure\n         */\n        orgControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/org/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerDeleteOrg\n         * @summary Delete Org\n         * @request DELETE:/org/{id}\n         * @secure\n         */\n        orgControllerDeleteOrg: (id, params = {}) => this.request({\n            path: `/org/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerFindAllUsers\n         * @summary List Users\n         * @request GET:/org/{id}/user\n         * @secure\n         */\n        orgControllerFindAllUsers: (id, params = {}) => this.request({\n            path: `/org/${id}/user`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerOrgLeave\n         * @summary Leave Org\n         * @request DELETE:/org/{id}/leave\n         * @secure\n         */\n        orgControllerOrgLeave: (id, params = {}) => this.request({\n            path: `/org/${id}/leave`,\n            method: \"DELETE\",\n            secure: true,\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerOrgRemoveUser\n         * @summary Remove Org Member\n         * @request DELETE:/org/{id}/member/{memberId}/leave\n         * @secure\n         */\n        orgControllerOrgRemoveUser: (id, memberId, params = {}) => this.request({\n            path: `/org/${id}/member/${memberId}/leave`,\n            method: \"DELETE\",\n            secure: true,\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerUsersInvite\n         * @summary Invite User\n         * @request POST:/org/{id}/invite\n         * @secure\n         */\n        orgControllerUsersInvite: (id, data, params = {}) => this.request({\n            path: `/org/${id}/invite`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerUserUpdate\n         * @summary Update User Role\n         * @request PATCH:/org/{id}/role\n         * @secure\n         */\n        orgControllerUserUpdate: (id, data, params = {}) => this.request({\n            path: `/org/${id}/role`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Orgs\n         * @name OrgControllerOrgToken\n         * @summary Generate User Org JWT\n         * @request GET:/org/{id}/auth\n         * @secure\n         */\n        orgControllerOrgToken: (id, params = {}) => this.request({\n            path: `/org/${id}/auth`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    token = {\n        /**\n         * No description\n         *\n         * @tags Tokens\n         * @name TokenControllerCreate\n         * @summary Create Token\n         * @request POST:/token\n         * @secure\n         */\n        tokenControllerCreate: (data, params = {}) => this.request({\n            path: `/token`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Tokens\n         * @name TokenControllerFindAll\n         * @summary List Tokens\n         * @request GET:/token\n         * @secure\n         */\n        tokenControllerFindAll: (query, params = {}) => this.request({\n            path: `/token`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Tokens\n         * @name TokenControllerFindOne\n         * @summary Get Token\n         * @request GET:/token/{id}\n         * @secure\n         */\n        tokenControllerFindOne: (id, params = {}) => this.request({\n            path: `/token/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Tokens\n         * @name TokenControllerUpdate\n         * @summary Update Token\n         * @request PATCH:/token/{id}\n         * @secure\n         */\n        tokenControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/token/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Tokens\n         * @name TokenControllerRemove\n         * @summary Delete Token\n         * @request DELETE:/token/{id}\n         * @secure\n         */\n        tokenControllerRemove: (id, params = {}) => this.request({\n            path: `/token/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    credential = {\n        /**\n         * No description\n         *\n         * @tags Credentials\n         * @name CredentialControllerCreate\n         * @summary Create Credential\n         * @request POST:/credential\n         * @secure\n         */\n        credentialControllerCreate: (data, params = {}) => this.request({\n            path: `/credential`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Credentials\n         * @name CredentialControllerFindAll\n         * @summary List Credentials\n         * @request GET:/credential\n         * @secure\n         */\n        credentialControllerFindAll: (query, params = {}) => this.request({\n            path: `/credential`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Credentials\n         * @name CredentialControllerFindOne\n         * @summary Get Credential\n         * @request GET:/credential/{id}\n         * @secure\n         */\n        credentialControllerFindOne: (id, params = {}) => this.request({\n            path: `/credential/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Credentials\n         * @name CredentialControllerUpdate\n         * @summary Update Credential\n         * @request PATCH:/credential/{id}\n         * @secure\n         */\n        credentialControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/credential/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Credentials\n         * @name CredentialControllerRemove\n         * @summary Delete Credential\n         * @request DELETE:/credential/{id}\n         * @secure\n         */\n        credentialControllerRemove: (id, params = {}) => this.request({\n            path: `/credential/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Credentials\n         * @name CredentialControllerGenerateSession\n         * @summary Generate a credential session\n         * @request POST:/credential/session\n         * @secure\n         */\n        credentialControllerGenerateSession: (data, params = {}) => this.request({\n            path: `/credential/session`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Credentials\n         * @name CredentialControllerHandleWebhook\n         * @summary Handle credential webhook\n         * @request POST:/credential/webhook\n         */\n        credentialControllerHandleWebhook: (data, params = {}) => this.request({\n            path: `/credential/webhook`,\n            method: \"POST\",\n            body: data,\n            type: ContentType.Json,\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Credentials\n         * @name CredentialControllerCredentialActionTrigger\n         * @summary Trigger a credential action\n         * @request POST:/credential/trigger\n         * @secure\n         */\n        credentialControllerCredentialActionTrigger: (data, params = {}) => this.request({\n            path: `/credential/trigger`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            ...params,\n        }),\n    };\n    template = {\n        /**\n         * No description\n         *\n         * @tags Templates\n         * @name TemplateControllerCreate\n         * @summary Create Template\n         * @request POST:/template\n         * @secure\n         */\n        templateControllerCreate: (data, params = {}) => this.request({\n            path: `/template`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Templates\n         * @name TemplateControllerFindAll\n         * @summary List Templates\n         * @request GET:/template\n         * @secure\n         */\n        templateControllerFindAll: (query, params = {}) => this.request({\n            path: `/template`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Templates\n         * @name TemplateControllerFindAllPinned\n         * @summary List Templates\n         * @request GET:/template/pinned\n         * @secure\n         */\n        templateControllerFindAllPinned: (params = {}) => this.request({\n            path: `/template/pinned`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Templates\n         * @name TemplateControllerFindOne\n         * @summary Get Template\n         * @request GET:/template/{id}\n         * @secure\n         */\n        templateControllerFindOne: (id, params = {}) => this.request({\n            path: `/template/${id}`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Templates\n         * @name TemplateControllerUpdate\n         * @summary Update Template\n         * @request PATCH:/template/{id}\n         * @secure\n         */\n        templateControllerUpdate: (id, data, params = {}) => this.request({\n            path: `/template/${id}`,\n            method: \"PATCH\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Templates\n         * @name TemplateControllerRemove\n         * @summary Delete Template\n         * @request DELETE:/template/{id}\n         * @secure\n         */\n        templateControllerRemove: (id, params = {}) => this.request({\n            path: `/template/${id}`,\n            method: \"DELETE\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    voiceLibrary = {\n        /**\n         * No description\n         *\n         * @tags Voice Library\n         * @name VoiceLibraryControllerVoiceGetByProvider\n         * @summary Get voices in Voice Library by Provider\n         * @request GET:/voice-library/{provider}\n         * @secure\n         */\n        voiceLibraryControllerVoiceGetByProvider: (provider, query, params = {}) => this.request({\n            path: `/voice-library/${provider}`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Voice Library\n         * @name VoiceLibraryControllerVoiceGetAccentsByProvider\n         * @summary Get accents in Voice Library by Provider\n         * @request GET:/voice-library/{provider}/accents\n         * @secure\n         */\n        voiceLibraryControllerVoiceGetAccentsByProvider: (provider, params = {}) => this.request({\n            path: `/voice-library/${provider}/accents`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Voice Library\n         * @name VoiceLibraryControllerVoiceLibrarySyncByProvider\n         * @summary Sync Private voices in Voice Library by Provider\n         * @request POST:/voice-library/sync/{provider}\n         * @secure\n         */\n        voiceLibraryControllerVoiceLibrarySyncByProvider: (provider, params = {}) => this.request({\n            path: `/voice-library/sync/${provider}`,\n            method: \"POST\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Voice Library\n         * @name VoiceLibraryControllerVoiceLibrarySyncDefaultVoices\n         * @summary Sync Default voices in Voice Library by Providers\n         * @request POST:/voice-library/sync\n         * @secure\n         */\n        voiceLibraryControllerVoiceLibrarySyncDefaultVoices: (data, params = {}) => this.request({\n            path: `/voice-library/sync`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Voice Library\n         * @name VoiceLibraryControllerVoiceLibraryCreateSesameVoice\n         * @summary Create a new voice in the Voice Library using Sesame\n         * @request POST:/voice-library/create-sesame-voice\n         * @secure\n         */\n        voiceLibraryControllerVoiceLibraryCreateSesameVoice: (data, params = {}) => this.request({\n            path: `/voice-library/create-sesame-voice`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            ...params,\n        }),\n    };\n    provider = {\n        /**\n         * No description\n         *\n         * @tags Providers\n         * @name ProviderControllerGetWorkflows\n         * @request GET:/{provider}/workflows\n         * @secure\n         */\n        providerControllerGetWorkflows: (provider, query, params = {}) => this.request({\n            path: `/${provider}/workflows`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Providers\n         * @name ProviderControllerGetWorkflowTriggerHook\n         * @request GET:/{provider}/workflows/{workflowId}/hooks\n         * @secure\n         */\n        providerControllerGetWorkflowTriggerHook: (provider, workflowId, params = {}) => this.request({\n            path: `/${provider}/workflows/${workflowId}/hooks`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Providers\n         * @name ProviderControllerGetLocations\n         * @request GET:/{provider}/locations\n         * @secure\n         */\n        providerControllerGetLocations: (provider, params = {}) => this.request({\n            path: `/${provider}/locations`,\n            method: \"GET\",\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Providers\n         * @name VoiceProviderControllerSearchVoices\n         * @summary Search Voice from Provider Voice Library.\n         * @request GET:/{provider}/voices/search\n         * @deprecated\n         * @secure\n         */\n        voiceProviderControllerSearchVoices: (provider, query, params = {}) => this.request({\n            path: `/${provider}/voices/search`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Providers\n         * @name VoiceProviderControllerSearchVoice\n         * @summary Search Voice from Provider Voice Library.\n         * @request GET:/{provider}/voice/search\n         * @secure\n         */\n        voiceProviderControllerSearchVoice: (provider, query, params = {}) => this.request({\n            path: `/${provider}/voice/search`,\n            method: \"GET\",\n            query: query,\n            secure: true,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Providers\n         * @name VoiceProviderControllerAddVoices\n         * @summary Add Shared Voice to your Provider Account.\n         * @request POST:/{provider}/voices/add\n         * @deprecated\n         * @secure\n         */\n        voiceProviderControllerAddVoices: (provider, data, params = {}) => this.request({\n            path: `/${provider}/voices/add`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * No description\n         *\n         * @tags Providers\n         * @name VoiceProviderControllerAddVoice\n         * @summary Add Shared Voice to your Provider Account.\n         * @request POST:/{provider}/voice/add\n         * @secure\n         */\n        voiceProviderControllerAddVoice: (provider, data, params = {}) => this.request({\n            path: `/${provider}/voice/add`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.Json,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    v11Labs = {\n        /**\n         * No description\n         *\n         * @tags Providers\n         * @name VoiceProviderControllerCloneVoices\n         * @summary Clone a voice to the provider account and add to Vapi Voice Library.\n         * @request POST:/11labs/voice/clone\n         * @secure\n         */\n        voiceProviderControllerCloneVoices: (data, params = {}) => this.request({\n            path: `/11labs/voice/clone`,\n            method: \"POST\",\n            body: data,\n            secure: true,\n            type: ContentType.FormData,\n            ...params,\n        }),\n    };\n}\nexports.Api = Api;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2370, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chauh/OneDrive/Desktop/Coding/saas/node_modules/%40vapi-ai/web/dist/client.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.client = void 0;\nconst api_1 = require(\"./api\");\nconst api = new api_1.Api({\n    baseUrl: \"https://api.vapi.ai\",\n    baseApiParams: {\n        secure: true,\n    },\n    securityWorker: async (securityData) => {\n        if (securityData) {\n            return {\n                headers: {\n                    Authorization: `Bearer ${securityData}`,\n                },\n            };\n        }\n    },\n});\nexports.client = api;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,MAAM,GAAG,KAAK;AACtB,MAAM;AACN,MAAM,MAAM,IAAI,MAAM,GAAG,CAAC;IACtB,SAAS;IACT,eAAe;QACX,QAAQ;IACZ;IACA,gBAAgB,OAAO;QACnB,IAAI,cAAc;YACd,OAAO;gBACH,SAAS;oBACL,eAAe,CAAC,OAAO,EAAE,cAAc;gBAC3C;YACJ;QACJ;IACJ;AACJ;AACA,QAAQ,MAAM,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2397, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chauh/OneDrive/Desktop/Coding/saas/node_modules/%40vapi-ai/web/dist/vapi.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst daily_js_1 = __importDefault(require(\"@daily-co/daily-js\"));\nconst events_1 = __importDefault(require(\"events\"));\nconst client_1 = require(\"./client\");\nasync function startAudioPlayer(player, track) {\n    player.muted = false;\n    player.autoplay = true;\n    if (track != null) {\n        player.srcObject = new MediaStream([track]);\n        await player.play();\n    }\n}\nasync function buildAudioPlayer(track, participantId) {\n    const player = document.createElement('audio');\n    player.dataset.participantId = participantId;\n    document.body.appendChild(player);\n    await startAudioPlayer(player, track);\n    return player;\n}\nfunction destroyAudioPlayer(participantId) {\n    const player = document.querySelector(`audio[data-participant-id=\"${participantId}\"]`);\n    player?.remove();\n}\nfunction subscribeToTracks(e, call, isVideoRecordingEnabled, isVideoEnabled) {\n    if (e.participant.local)\n        return;\n    call.updateParticipant(e.participant.session_id, {\n        setSubscribedTracks: {\n            audio: true,\n            video: isVideoRecordingEnabled || isVideoEnabled,\n        },\n    });\n}\nclass VapiEventEmitter extends events_1.default {\n    on(event, listener) {\n        super.on(event, listener);\n        return this;\n    }\n    once(event, listener) {\n        super.once(event, listener);\n        return this;\n    }\n    emit(event, ...args) {\n        return super.emit(event, ...args);\n    }\n    removeListener(event, listener) {\n        super.removeListener(event, listener);\n        return this;\n    }\n    removeAllListeners(event) {\n        super.removeAllListeners(event);\n        return this;\n    }\n}\nclass Vapi extends VapiEventEmitter {\n    started = false;\n    call = null;\n    speakingTimeout = null;\n    dailyCallConfig = {};\n    dailyCallObject = {};\n    hasEmittedCallEndedStatus = false;\n    constructor(apiToken, apiBaseUrl, dailyCallConfig, dailyCallObject) {\n        super();\n        client_1.client.baseUrl = apiBaseUrl ?? 'https://api.vapi.ai';\n        client_1.client.setSecurityData(apiToken);\n        this.dailyCallConfig = dailyCallConfig ?? {};\n        this.dailyCallObject = dailyCallObject ?? {};\n    }\n    cleanup() {\n        this.started = false;\n        this.hasEmittedCallEndedStatus = false;\n        this.call?.destroy();\n        this.call = null;\n        this.speakingTimeout = null;\n    }\n    isMobileDevice() {\n        if (typeof navigator === 'undefined') {\n            return false;\n        }\n        const userAgent = navigator.userAgent;\n        return /android|iphone|ipad|ipod|iemobile|blackberry|bada/i.test(userAgent.toLowerCase());\n    }\n    async sleep(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n    async start(assistant, assistantOverrides, squad, workflow, workflowOverrides) {\n        const startTime = Date.now();\n        // Input validation with detailed error messages\n        if (!assistant && !squad && !workflow) {\n            const error = new Error('Assistant or Squad or Workflow must be provided.');\n            this.emit('error', {\n                type: 'validation-error',\n                stage: 'input-validation',\n                message: error.message,\n                timestamp: new Date().toISOString()\n            });\n            throw error;\n        }\n        if (this.started) {\n            this.emit('call-start-progress', {\n                stage: 'validation',\n                status: 'failed',\n                timestamp: new Date().toISOString(),\n                metadata: { reason: 'already-started' }\n            });\n            return null;\n        }\n        this.emit('call-start-progress', {\n            stage: 'initialization',\n            status: 'started',\n            timestamp: new Date().toISOString(),\n            metadata: {\n                hasAssistant: !!assistant,\n                hasSquad: !!squad,\n                hasWorkflow: !!workflow\n            }\n        });\n        this.started = true;\n        try {\n            // Stage 1: Create web call\n            this.emit('call-start-progress', {\n                stage: 'web-call-creation',\n                status: 'started',\n                timestamp: new Date().toISOString()\n            });\n            const webCallStartTime = Date.now();\n            const webCall = (await client_1.client.call.callControllerCreateWebCall({\n                assistant: typeof assistant === 'string' ? undefined : assistant,\n                assistantId: typeof assistant === 'string' ? assistant : undefined,\n                assistantOverrides,\n                squad: typeof squad === 'string' ? undefined : squad,\n                squadId: typeof squad === 'string' ? squad : undefined,\n                workflow: typeof workflow === 'string' ? undefined : workflow,\n                workflowId: typeof workflow === 'string' ? workflow : undefined,\n                workflowOverrides,\n            })).data;\n            const webCallDuration = Date.now() - webCallStartTime;\n            this.emit('call-start-progress', {\n                stage: 'web-call-creation',\n                status: 'completed',\n                duration: webCallDuration,\n                timestamp: new Date().toISOString(),\n                metadata: {\n                    callId: webCall?.id || 'unknown',\n                    videoRecordingEnabled: webCall?.artifactPlan?.videoRecordingEnabled ?? false,\n                    voiceProvider: webCall?.assistant?.voice?.provider || 'unknown'\n                }\n            });\n            if (this.call) {\n                this.emit('call-start-progress', {\n                    stage: 'daily-call-object-creation',\n                    status: 'started',\n                    timestamp: new Date().toISOString(),\n                    metadata: { action: 'cleanup-existing' }\n                });\n                this.cleanup();\n            }\n            const isVideoRecordingEnabled = webCall?.artifactPlan?.videoRecordingEnabled ?? false;\n            const isVideoEnabled = webCall?.assistant?.voice?.provider === 'tavus';\n            // Stage 2: Create Daily call object\n            this.emit('call-start-progress', {\n                stage: 'daily-call-object-creation',\n                status: 'started',\n                timestamp: new Date().toISOString(),\n                metadata: {\n                    audioSource: this.dailyCallObject.audioSource ?? true,\n                    videoSource: this.dailyCallObject.videoSource ?? isVideoRecordingEnabled,\n                    isVideoRecordingEnabled,\n                    isVideoEnabled\n                }\n            });\n            const dailyCallStartTime = Date.now();\n            try {\n                this.call = daily_js_1.default.createCallObject({\n                    audioSource: this.dailyCallObject.audioSource ?? true,\n                    videoSource: this.dailyCallObject.videoSource ?? isVideoRecordingEnabled,\n                    dailyConfig: this.dailyCallConfig,\n                });\n                const dailyCallDuration = Date.now() - dailyCallStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'daily-call-object-creation',\n                    status: 'completed',\n                    duration: dailyCallDuration,\n                    timestamp: new Date().toISOString()\n                });\n            }\n            catch (error) {\n                const dailyCallDuration = Date.now() - dailyCallStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'daily-call-object-creation',\n                    status: 'failed',\n                    duration: dailyCallDuration,\n                    timestamp: new Date().toISOString(),\n                    metadata: { error: error?.toString() }\n                });\n                this.emit('error', {\n                    type: 'daily-call-object-creation-error',\n                    stage: 'daily-call-object-creation',\n                    error,\n                    timestamp: new Date().toISOString()\n                });\n                throw error;\n            }\n            this.call.iframe()?.style.setProperty('display', 'none');\n            this.call.on('left-meeting', () => {\n                this.emit('call-end');\n                if (!this.hasEmittedCallEndedStatus) {\n                    this.emit('message', {\n                        type: 'status-update',\n                        status: 'ended',\n                        'endedReason': 'customer-ended-call',\n                    });\n                    this.hasEmittedCallEndedStatus = true;\n                }\n                if (isVideoRecordingEnabled) {\n                    this.call?.stopRecording();\n                }\n                this.cleanup();\n            });\n            this.call.on('error', (error) => {\n                this.emit('error', error);\n                if (isVideoRecordingEnabled) {\n                    this.call?.stopRecording();\n                }\n            });\n            this.call.on('camera-error', (error) => {\n                this.emit('camera-error', error);\n            });\n            this.call.on('network-quality-change', (event) => {\n                this.emit('network-quality-change', event);\n            });\n            this.call.on('network-connection', (event) => {\n                this.emit('network-connection', event);\n            });\n            this.call.on('track-started', async (e) => {\n                if (!e || !e.participant) {\n                    return;\n                }\n                if (e.participant?.local) {\n                    return;\n                }\n                if (e.participant?.user_name !== 'Vapi Speaker') {\n                    return;\n                }\n                if (e.track.kind === 'video') {\n                    this.emit('video', e.track);\n                }\n                if (e.track.kind === 'audio') {\n                    await buildAudioPlayer(e.track, e.participant.session_id);\n                }\n                this.call?.sendAppMessage('playable');\n            });\n            this.call.on('participant-joined', (e) => {\n                if (!e || !this.call)\n                    return;\n                subscribeToTracks(e, this.call, isVideoRecordingEnabled, isVideoEnabled);\n            });\n            this.call.on('participant-updated', (e) => {\n                if (!e) {\n                    return;\n                }\n                this.emit('daily-participant-updated', e.participant);\n            });\n            this.call.on('participant-left', (e) => {\n                if (!e) {\n                    return;\n                }\n                destroyAudioPlayer(e.participant.session_id);\n            });\n            // Stage 3: Mobile device handling and permissions\n            const isMobile = this.isMobileDevice();\n            this.emit('call-start-progress', {\n                stage: 'mobile-permissions',\n                status: 'started',\n                timestamp: new Date().toISOString(),\n                metadata: { isMobile }\n            });\n            if (isMobile) {\n                const mobileWaitStartTime = Date.now();\n                await this.sleep(1000);\n                const mobileWaitDuration = Date.now() - mobileWaitStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'mobile-permissions',\n                    status: 'completed',\n                    duration: mobileWaitDuration,\n                    timestamp: new Date().toISOString(),\n                    metadata: { action: 'permissions-wait' }\n                });\n            }\n            else {\n                this.emit('call-start-progress', {\n                    stage: 'mobile-permissions',\n                    status: 'completed',\n                    timestamp: new Date().toISOString(),\n                    metadata: { action: 'skipped-not-mobile' }\n                });\n            }\n            // Stage 4: Join the call\n            this.emit('call-start-progress', {\n                stage: 'daily-call-join',\n                status: 'started',\n                timestamp: new Date().toISOString()\n            });\n            const joinStartTime = Date.now();\n            try {\n                await this.call.join({\n                    // @ts-expect-error This exists\n                    url: webCall.webCallUrl,\n                    subscribeToTracksAutomatically: false,\n                });\n                const joinDuration = Date.now() - joinStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'daily-call-join',\n                    status: 'completed',\n                    duration: joinDuration,\n                    timestamp: new Date().toISOString()\n                });\n            }\n            catch (error) {\n                const joinDuration = Date.now() - joinStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'daily-call-join',\n                    status: 'failed',\n                    duration: joinDuration,\n                    timestamp: new Date().toISOString(),\n                    metadata: { error: error?.toString() }\n                });\n                this.emit('error', {\n                    type: 'daily-call-join-error',\n                    stage: 'daily-call-join',\n                    error,\n                    duration: joinDuration,\n                    timestamp: new Date().toISOString()\n                });\n                throw error;\n            }\n            // Stage 5: Video recording setup (if enabled)\n            if (isVideoRecordingEnabled) {\n                this.emit('call-start-progress', {\n                    stage: 'video-recording-setup',\n                    status: 'started',\n                    timestamp: new Date().toISOString()\n                });\n                const recordingRequestedTime = new Date().getTime();\n                const recordingStartTime = Date.now();\n                try {\n                    this.call.startRecording({\n                        width: 1280,\n                        height: 720,\n                        backgroundColor: '#FF1F2D3D',\n                        layout: {\n                            preset: 'default',\n                        },\n                    });\n                    const recordingSetupDuration = Date.now() - recordingStartTime;\n                    this.emit('call-start-progress', {\n                        stage: 'video-recording-setup',\n                        status: 'completed',\n                        duration: recordingSetupDuration,\n                        timestamp: new Date().toISOString()\n                    });\n                    this.call.on('recording-started', () => {\n                        const totalRecordingDelay = (new Date().getTime() - recordingRequestedTime) / 1000;\n                        this.emit('call-start-progress', {\n                            stage: 'video-recording-started',\n                            status: 'completed',\n                            timestamp: new Date().toISOString(),\n                            metadata: { delaySeconds: totalRecordingDelay }\n                        });\n                        this.send({\n                            type: 'control',\n                            control: 'say-first-message',\n                            videoRecordingStartDelaySeconds: totalRecordingDelay,\n                        });\n                    });\n                }\n                catch (error) {\n                    const recordingSetupDuration = Date.now() - recordingStartTime;\n                    this.emit('call-start-progress', {\n                        stage: 'video-recording-setup',\n                        status: 'failed',\n                        duration: recordingSetupDuration,\n                        timestamp: new Date().toISOString(),\n                        metadata: { error: error?.toString() }\n                    });\n                    this.emit('error', {\n                        type: 'video-recording-setup-error',\n                        stage: 'video-recording-setup',\n                        error,\n                        timestamp: new Date().toISOString()\n                    });\n                    // Don't throw here, video recording is optional\n                }\n            }\n            else {\n                this.emit('call-start-progress', {\n                    stage: 'video-recording-setup',\n                    status: 'completed',\n                    timestamp: new Date().toISOString(),\n                    metadata: { action: 'skipped-not-enabled' }\n                });\n            }\n            // Stage 6: Audio level observer setup\n            this.emit('call-start-progress', {\n                stage: 'audio-observer-setup',\n                status: 'started',\n                timestamp: new Date().toISOString()\n            });\n            const audioObserverStartTime = Date.now();\n            try {\n                this.call.startRemoteParticipantsAudioLevelObserver(100);\n                const audioObserverDuration = Date.now() - audioObserverStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'audio-observer-setup',\n                    status: 'completed',\n                    duration: audioObserverDuration,\n                    timestamp: new Date().toISOString()\n                });\n            }\n            catch (error) {\n                const audioObserverDuration = Date.now() - audioObserverStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'audio-observer-setup',\n                    status: 'failed',\n                    duration: audioObserverDuration,\n                    timestamp: new Date().toISOString(),\n                    metadata: { error: error?.toString() }\n                });\n                this.emit('error', {\n                    type: 'audio-observer-setup-error',\n                    stage: 'audio-observer-setup',\n                    error,\n                    timestamp: new Date().toISOString()\n                });\n                // Don't throw here, this is non-critical\n            }\n            this.call.on('remote-participants-audio-level', (e) => {\n                if (e)\n                    this.handleRemoteParticipantsAudioLevel(e);\n            });\n            this.call.on('app-message', (e) => this.onAppMessage(e));\n            this.call.on('nonfatal-error', (e) => {\n                // https://docs.daily.co/reference/daily-js/events/meeting-events#type-audio-processor-error\n                if (e?.type === 'audio-processor-error') {\n                    this.call\n                        ?.updateInputSettings({\n                        audio: {\n                            processor: {\n                                type: 'none',\n                            },\n                        },\n                    })\n                        .then(() => {\n                        this.call?.setLocalAudio(true);\n                    });\n                }\n            });\n            // Stage 7: Audio processing setup\n            this.emit('call-start-progress', {\n                stage: 'audio-processing-setup',\n                status: 'started',\n                timestamp: new Date().toISOString()\n            });\n            const audioProcessingStartTime = Date.now();\n            try {\n                this.call.updateInputSettings({\n                    audio: {\n                        processor: {\n                            type: 'noise-cancellation',\n                        },\n                    },\n                });\n                const audioProcessingDuration = Date.now() - audioProcessingStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'audio-processing-setup',\n                    status: 'completed',\n                    duration: audioProcessingDuration,\n                    timestamp: new Date().toISOString()\n                });\n            }\n            catch (error) {\n                const audioProcessingDuration = Date.now() - audioProcessingStartTime;\n                this.emit('call-start-progress', {\n                    stage: 'audio-processing-setup',\n                    status: 'failed',\n                    duration: audioProcessingDuration,\n                    timestamp: new Date().toISOString(),\n                    metadata: { error: error?.toString() }\n                });\n                this.emit('error', {\n                    type: 'audio-processing-setup-error',\n                    stage: 'audio-processing-setup',\n                    error,\n                    timestamp: new Date().toISOString()\n                });\n                // Don't throw here, this is non-critical\n            }\n            const totalDuration = Date.now() - startTime;\n            this.emit('call-start-success', {\n                totalDuration,\n                callId: webCall?.id || 'unknown',\n                timestamp: new Date().toISOString()\n            });\n            return webCall;\n        }\n        catch (e) {\n            const totalDuration = Date.now() - startTime;\n            this.emit('call-start-failed', {\n                stage: 'unknown',\n                totalDuration,\n                error: e?.toString() || 'Unknown error occurred',\n                errorStack: e instanceof Error ? e.stack : 'No stack trace available',\n                timestamp: new Date().toISOString(),\n                context: {\n                    hasAssistant: !!assistant,\n                    hasSquad: !!squad,\n                    hasWorkflow: !!workflow,\n                    isMobile: this.isMobileDevice()\n                }\n            });\n            // Also emit the generic error event for backward compatibility\n            this.emit('error', {\n                type: 'start-method-error',\n                stage: 'unknown',\n                error: e,\n                totalDuration,\n                timestamp: new Date().toISOString(),\n                context: {\n                    hasAssistant: !!assistant,\n                    hasSquad: !!squad,\n                    hasWorkflow: !!workflow,\n                    isMobile: this.isMobileDevice()\n                }\n            });\n            this.cleanup();\n            return null;\n        }\n    }\n    onAppMessage(e) {\n        if (!e) {\n            return;\n        }\n        try {\n            if (e.data === 'listening') {\n                return this.emit('call-start');\n            }\n            else {\n                try {\n                    const parsedMessage = JSON.parse(e.data);\n                    this.emit('message', parsedMessage);\n                    if (parsedMessage && 'type' in parsedMessage && 'status' in parsedMessage && parsedMessage.type === 'status-update' && parsedMessage.status === 'ended') {\n                        this.hasEmittedCallEndedStatus = true;\n                    }\n                }\n                catch (parseError) {\n                    console.log('Error parsing message data: ', parseError);\n                }\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    handleRemoteParticipantsAudioLevel(e) {\n        const speechLevel = Object.values(e.participantsAudioLevel).reduce((a, b) => a + b, 0);\n        this.emit('volume-level', Math.min(1, speechLevel / 0.15));\n        const isSpeaking = speechLevel > 0.01;\n        if (!isSpeaking) {\n            return;\n        }\n        if (this.speakingTimeout) {\n            clearTimeout(this.speakingTimeout);\n            this.speakingTimeout = null;\n        }\n        else {\n            this.emit('speech-start');\n        }\n        this.speakingTimeout = setTimeout(() => {\n            this.emit('speech-end');\n            this.speakingTimeout = null;\n        }, 1000);\n    }\n    stop() {\n        this.started = false;\n        this.call?.destroy();\n        this.call = null;\n    }\n    send(message) {\n        this.call?.sendAppMessage(JSON.stringify(message));\n    }\n    setMuted(mute) {\n        if (!this.call) {\n            throw new Error('Call object is not available.');\n        }\n        this.call.setLocalAudio(!mute);\n    }\n    isMuted() {\n        if (!this.call) {\n            return false;\n        }\n        return this.call.localAudio() === false;\n    }\n    say(message, endCallAfterSpoken, interruptionsEnabled, interruptAssistantEnabled) {\n        this.send({\n            type: 'say',\n            message,\n            endCallAfterSpoken,\n            interruptionsEnabled: interruptionsEnabled ?? false,\n            interruptAssistantEnabled: interruptAssistantEnabled ?? false,\n        });\n    }\n    setInputDevicesAsync(options) {\n        this.call?.setInputDevicesAsync(options);\n    }\n    async increaseMicLevel(gain) {\n        if (!this.call) {\n            throw new Error('Call object is not available.');\n        }\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            const audioContext = new AudioContext();\n            const source = audioContext.createMediaStreamSource(stream);\n            const gainNode = audioContext.createGain();\n            gainNode.gain.value = gain;\n            source.connect(gainNode);\n            const destination = audioContext.createMediaStreamDestination();\n            gainNode.connect(destination);\n            const [boostedTrack] = destination.stream.getAudioTracks();\n            await this.call.setInputDevicesAsync({ audioSource: boostedTrack });\n        }\n        catch (error) {\n            console.error(\"Error adjusting microphone level:\", error);\n        }\n    }\n    setOutputDeviceAsync(options) {\n        this.call?.setOutputDeviceAsync(options);\n    }\n    getDailyCallObject() {\n        return this.call;\n    }\n    startScreenSharing(displayMediaOptions, screenVideoSendSettings) {\n        this.call?.startScreenShare({\n            displayMediaOptions,\n            screenVideoSendSettings,\n        });\n    }\n    stopScreenSharing() {\n        this.call?.stopScreenShare();\n    }\n}\nexports.default = Vapi;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3073, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chauh/OneDrive/Desktop/Coding/saas/node_modules/next/src/shared/lib/image-external.tsx"],"sourcesContent":["import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// @ts-ignore - This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n"],"names":["getImageProps","imgProps","props","getImgProps","defaultLoader","imgConf","process","env","__NEXT_IMAGE_OPTS","key","value","Object","entries","undefined","Image"],"mappings":";;;;;;;;;;;;;;;IAiCA,OAAoB,EAAA;eAApB;;IAjBgBA,aAAa,EAAA;eAAbA;;;;6BAbY;gCACN;sEAGI;AASnB,SAASA,cAAcC,QAAoB;IAChD,MAAM,EAAEC,KAAK,EAAE,GAAGC,CAAAA,GAAAA,aAAAA,WAAW,EAACF,UAAU;QACtCG,eAAAA,aAAAA,OAAa;QACb,4CAA4C;QAC5CC,OAAAA,EAASC,QAAQC,GAAG,CAACC,iBAAiB;IACxC;IACA,uEAAuE;IACvE,wEAAwE;IACxE,wDAAwD;IACxD,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACV,OAAQ;QAChD,IAAIQ,UAAUG,WAAW;YACvB,OAAOX,KAAK,CAACO,IAA0B;QACzC;IACF;IACA,OAAO;QAAEP;IAAM;AACjB;MAEA,WAAeY,gBAAAA,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3123, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chauh/OneDrive/Desktop/Coding/saas/node_modules/next/image.js"],"sourcesContent":["module.exports = require('./dist/shared/lib/image-external')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3130, "column": 0}, "map": {"version":3,"file":"index.es.js","sources":["file:///C:/Users/chauh/OneDrive/Desktop/Coding/saas/node_modules/lottie-react/compiled/hooks/useLottie.js","file:///C:/Users/chauh/OneDrive/Desktop/Coding/saas/node_modules/lottie-react/compiled/hooks/useLottieInteractivity.js","file:///C:/Users/chauh/OneDrive/Desktop/Coding/saas/node_modules/lottie-react/compiled/components/Lottie.js"],"sourcesContent":["import lottie from \"lottie-web\";\nimport React, { useEffect, useRef, useState, } from \"react\";\nconst useLottie = (props, style) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, \n    // Specified here to take them out from the 'rest'\n    lottieRef, renderer, name, assetsPath, rendererSettings, \n    // TODO: find a better way to extract the html props to avoid specifying\n    //  all the props that we want to exclude (as you can see above)\n    ...rest } = props;\n    const [animationLoaded, setAnimationLoaded] = useState(false);\n    const animationInstanceRef = useRef();\n    const animationContainer = useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n    /**\n     * Play\n     */\n    const play = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n    const stop = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n    const pause = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n    const setSpeed = (speed) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n    const setDirection = (direction) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n    const playSegments = (segments, forceFlag) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n    const setSubframe = (useSubFrames) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => { var _a; return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames); };\n    /**\n     * Destroy animation\n     */\n    const destroy = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        // Removing the reference to the animation so separate cleanups are skipped.\n        // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.\n        animationInstanceRef.current = undefined;\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n    const loadAnimation = (forcedConfigs = {}) => {\n        var _a;\n        // Return if the container ref is null\n        if (!animationContainer.current) {\n            return;\n        }\n        // Destroy any previous instance\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        // Build the animation configuration\n        const config = {\n            ...props,\n            ...forcedConfigs,\n            container: animationContainer.current,\n        };\n        // Save the animation instance\n        animationInstanceRef.current = lottie.loadAnimation(config);\n        setAnimationLoaded(!!animationInstanceRef.current);\n        // Return a function that will clean up\n        return () => {\n            var _a;\n            (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n            animationInstanceRef.current = undefined;\n        };\n    };\n    /**\n     * (Re)Initialize when animation data changed\n     */\n    useEffect(() => {\n        const onUnmount = loadAnimation();\n        // Clean up on unmount\n        return () => onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationData, loop]);\n    // Update the autoplay state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        animationInstanceRef.current.autoplay = !!autoplay;\n    }, [autoplay]);\n    // Update the initial segment state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        // When null should reset to default animation length\n        if (!initialSegment) {\n            animationInstanceRef.current.resetSegments(true);\n            return;\n        }\n        // If it's not a valid segment, do nothing\n        if (!Array.isArray(initialSegment) || !initialSegment.length) {\n            return;\n        }\n        // If the current position it's not in the new segment\n        // set the current position to start\n        if (animationInstanceRef.current.currentRawFrame < initialSegment[0] ||\n            animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\n            animationInstanceRef.current.currentRawFrame = initialSegment[0];\n        }\n        // Update the segment\n        animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\n    }, [initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n    /**\n     * Reinitialize listener on change\n     */\n    useEffect(() => {\n        const partialListeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const listeners = partialListeners.filter((listener) => listener.handler != null);\n        if (!listeners.length) {\n            return;\n        }\n        const deregisterList = listeners.map(\n        /**\n         * Handle the process of adding an event listener\n         * @param {Listener} listener\n         * @return {Function} Function that deregister the listener\n         */\n        (listener) => {\n            var _a;\n            (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);\n            // Return a function to deregister this listener\n            return () => {\n                var _a;\n                (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n            };\n        });\n        // Deregister listeners on unmount\n        return () => {\n            deregisterList.forEach((deregister) => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * Build the animation view\n     */\n    const View = React.createElement(\"div\", { style: style, ref: animationContainer, ...rest });\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        getDuration,\n        destroy,\n        animationContainerRef: animationContainer,\n        animationLoaded,\n        animationItem: animationInstanceRef.current,\n    };\n};\nexport default useLottie;\n","import { useEffect } from \"react\";\n// helpers\nexport function getContainerVisibility(container) {\n    const { top, height } = container.getBoundingClientRect();\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    return current / max;\n}\nexport function getContainerCursorPosition(container, cursorX, cursorY) {\n    const { top, left, width, height } = container.getBoundingClientRect();\n    const x = (cursorX - left) / width;\n    const y = (cursorY - top) / height;\n    return { x, y };\n}\nexport const useInitInteractivity = ({ wrapperRef, animationItem, mode, actions, }) => {\n    useEffect(() => {\n        const wrapper = wrapperRef.current;\n        if (!wrapper || !animationItem || !actions.length) {\n            return;\n        }\n        animationItem.stop();\n        const scrollModeHandler = () => {\n            let assignedSegment = null;\n            const scrollHandler = () => {\n                const currentPercent = getContainerVisibility(wrapper);\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ visibility }) => visibility &&\n                    currentPercent >= visibility[0] &&\n                    currentPercent <= visibility[1]);\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                if (action.type === \"seek\" &&\n                    action.visibility &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const frameToGo = action.frames[0] +\n                        Math.ceil(((currentPercent - action.visibility[0]) /\n                            (action.visibility[1] - action.visibility[0])) *\n                            action.frames[1]);\n                    //! goToAndStop must be relative to the start of the current segment\n                    animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n                }\n                if (action.type === \"loop\") {\n                    // Loop: Loop a given frames\n                    if (assignedSegment === null) {\n                        // if not playing any segments currently. play those segments and save to state\n                        animationItem.playSegments(action.frames, true);\n                        assignedSegment = action.frames;\n                    }\n                    else {\n                        // if playing any segments currently.\n                        //check if segments in state are equal to the frames selected by action\n                        if (assignedSegment !== action.frames) {\n                            // if they are not equal. new segments are to be loaded\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                        else if (animationItem.isPaused) {\n                            // if they are equal the play method must be called only if lottie is paused\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                    }\n                }\n                if (action.type === \"play\" && animationItem.isPaused) {\n                    // Play: Reset segments and continue playing full animation from current position\n                    animationItem.resetSegments(true);\n                    animationItem.play();\n                }\n                if (action.type === \"stop\") {\n                    // Stop: Stop playback\n                    animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n                }\n            };\n            document.addEventListener(\"scroll\", scrollHandler);\n            return () => {\n                document.removeEventListener(\"scroll\", scrollHandler);\n            };\n        };\n        const cursorModeHandler = () => {\n            const handleCursor = (_x, _y) => {\n                let x = _x;\n                let y = _y;\n                // Resolve cursor position if cursor is inside container\n                if (x !== -1 && y !== -1) {\n                    // Get container cursor position\n                    const pos = getContainerCursorPosition(wrapper, x, y);\n                    // Use the resolved position\n                    x = pos.x;\n                    y = pos.y;\n                }\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ position }) => {\n                    if (position &&\n                        Array.isArray(position.x) &&\n                        Array.isArray(position.y)) {\n                        return (x >= position.x[0] &&\n                            x <= position.x[1] &&\n                            y >= position.y[0] &&\n                            y <= position.y[1]);\n                    }\n                    if (position &&\n                        !Number.isNaN(position.x) &&\n                        !Number.isNaN(position.y)) {\n                        return x === position.x && y === position.y;\n                    }\n                    return false;\n                });\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                // Process action types:\n                if (action.type === \"seek\" &&\n                    action.position &&\n                    Array.isArray(action.position.x) &&\n                    Array.isArray(action.position.y) &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const xPercent = (x - action.position.x[0]) /\n                        (action.position.x[1] - action.position.x[0]);\n                    const yPercent = (y - action.position.y[0]) /\n                        (action.position.y[1] - action.position.y[0]);\n                    animationItem.playSegments(action.frames, true);\n                    animationItem.goToAndStop(Math.ceil(((xPercent + yPercent) / 2) *\n                        (action.frames[1] - action.frames[0])), true);\n                }\n                if (action.type === \"loop\") {\n                    animationItem.playSegments(action.frames, true);\n                }\n                if (action.type === \"play\") {\n                    // Play: Reset segments and continue playing full animation from current position\n                    if (animationItem.isPaused) {\n                        animationItem.resetSegments(false);\n                    }\n                    animationItem.playSegments(action.frames);\n                }\n                if (action.type === \"stop\") {\n                    animationItem.goToAndStop(action.frames[0], true);\n                }\n            };\n            const mouseMoveHandler = (ev) => {\n                handleCursor(ev.clientX, ev.clientY);\n            };\n            const mouseOutHandler = () => {\n                handleCursor(-1, -1);\n            };\n            wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n            wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n            return () => {\n                wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n                wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n            };\n        };\n        switch (mode) {\n            case \"scroll\":\n                return scrollModeHandler();\n            case \"cursor\":\n                return cursorModeHandler();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [mode, animationItem]);\n};\nconst useLottieInteractivity = ({ actions, mode, lottieObj, }) => {\n    const { animationItem, View, animationContainerRef } = lottieObj;\n    useInitInteractivity({\n        actions,\n        animationItem,\n        mode,\n        wrapperRef: animationContainerRef,\n    });\n    return View;\n};\nexport default useLottieInteractivity;\n","import { useEffect } from \"react\";\nimport useLottie from \"../hooks/useLottie\";\nimport useLottieInteractivity from \"../hooks/useLottieInteractivity\";\nconst Lottie = (props) => {\n    var _a, _b, _c;\n    const { style, interactivity, ...lottieProps } = props;\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    const { View, play, stop, pause, setSpeed, goToAndStop, goToAndPlay, setDirection, playSegments, setSubframe, getDuration, destroy, animationContainerRef, animationLoaded, animationItem, } = useLottie(lottieProps, style);\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n    useEffect(() => {\n        if (props.lottieRef) {\n            props.lottieRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                getDuration,\n                destroy,\n                animationContainerRef,\n                animationLoaded,\n                animationItem,\n            };\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    return useLottieInteractivity({\n        lottieObj: {\n            View,\n            play,\n            stop,\n            pause,\n            setSpeed,\n            goToAndStop,\n            goToAndPlay,\n            setDirection,\n            playSegments,\n            setSubframe,\n            getDuration,\n            destroy,\n            animationContainerRef,\n            animationLoaded,\n            animationItem,\n        },\n        actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],\n        mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : \"scroll\",\n    });\n};\nexport default Lottie;\n"],"names":["useLottie","props","style","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","lottieRef","renderer","name","assetsPath","rendererSettings","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","animationLoaded","setAnimationLoaded","animationInstanceRef","useRef","animationContainer","play","_a","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segments","forceFlag","setSubframe","useSubFrames","getDuration","inFrames","destroy","undefined","loadAnimation","forcedConfigs","arguments","length","config","_objectSpread","container","lottie","useEffect","onUnmount","resetSegments","Array","isArray","currentRawFrame","setSegment","partialListeners","handler","listeners","filter","listener","deregisterList","map","addEventListener","removeEventListener","forEach","deregister","View","React","createElement","ref","animationContainerRef","animationItem","getContainerVisibility","_container$getBoundin","getBoundingClientRect","top","height","window","innerHeight","max","getContainerCursorPosition","cursorX","cursorY","_container$getBoundin2","left","width","x","y","useInitInteractivity","_ref","wrapperRef","mode","actions","wrapper","scrollModeHandler","assignedSegment","scrollHandler","currentPercent","action","find","_ref2","visibility","type","frames","frameToGo","Math","ceil","firstFrame","isPaused","document","cursorModeHandler","handleCursor","_x","_y","pos","_ref3","position","Number","isNaN","xPercent","yPercent","mouseMoveHandler","ev","clientX","clientY","mouseOutHandler","useLottieInteractivity","_ref4","lottieObj","Lottie","_b","_c","interactivity","lottieProps","_useLottie"],"mappings":"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","ignoreList":[0,1,2],"debugId":null}}]
}